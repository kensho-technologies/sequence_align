[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "sequence_align"
version = "0.1.2"
description = "Efficient implementations of Needleman-Wunsch and other sequence alignment algorithms in Rust with Python bindings."
readme = "README.md"
requires-python = ">=3.7"
authors = [
    {name = "Kensho Technologies LLC.", email = "sequence-align-maintainer@kensho.com"},
]
maintainers = [
    {name = "Kensho Technologies LLC.", email = "sequence-align-maintainer@kensho.com"},
]
license-files.paths = [
    "LICENSE",  # Apache 2.0
]
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Rust",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Typing :: Typed",
]

[project.urls]
source = "https://github.com/kensho-technologies/sequence_align"
"Homepage" = "https://github.com/kensho-technologies/sequence_align"
"Bug Tracker" = "https://github.com/kensho-technologies/sequence_align/issues"

[project.optional-dependencies]
dev = [
    "bandit",
    "black",
    "flake8",
    "isort>=5.0.0,<6",
    "mypy",
    "psutil",
    "pydocstyle",
    "pylint",
    "pytest",
    "pytest-cov",
    "pyyaml",
    "types-psutil",
    "types-pyyaml",
]

[tool.black]
line-length = 100

[tool.maturin]
# See https://www.maturin.rs/project_layout.html#import-rust-as-a-submodule-of-your-project
# Allows "from sequence_align import _sequence_align" import
module-name = "sequence_align._sequence_align"
# "extension-module" tells pyo3 we want to build an extension module (skips linking against libpython.so)
features = ["pyo3/extension-module"]

[tool.bandit]
exclude_dirs = ["tests"]
